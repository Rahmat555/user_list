{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3000/todos/';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      todos: [],\n      nameis: '',\n      descriptionis: ''\n    };\n  },\n  methods: {\n    async GetApi() {\n      await axios.get(baseUrl).then(resp => {\n        this.todos = resp.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async PostApi() {\n      await axios.post(baseUrl, {\n        name: this.nameis,\n        description: this.descriptionis\n      }).then(resp => {\n        console.log(resp);\n        this.nameis = '';\n        this.descriptionis = '';\n        this.GetApi();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async DeleteApi(id) {\n      await axios.delete(baseUrl + id).then(resp => {\n        console.log(resp);\n        this.GetApi();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async PutApi(id, name, description) {\n      await axios.put(baseUrl + id, {\n        name: name,\n        description: description\n      }).then(resp => {\n        console.log(resp);\n        this.GetApi();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  mounted() {\n    this.GetApi();\n  }\n};","map":{"version":3,"names":["axios","baseUrl","name","data","todos","nameis","descriptionis","methods","GetApi","get","then","resp","catch","err","console","log","PostApi","post","description","DeleteApi","id","delete","PutApi","put","mounted"],"sources":["C:\\Users\\rahma\\OneDrive\\Рабочий стол\\user_list\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container mt-2\">\n    <h1>User List</h1>\n    <div class=\"container d-inline-flex\">\n      <input type=\"text\" class=\"form-control rounded m-2\" placeholder=\"User name\" v-model=\"nameis\" v-on:keyup.enter=\"PostApi()\">\n      <input type=\"text\" class=\"form-control rounded m-2\" placeholder=\"User description\" v-model=\"descriptionis\" v-on:keyup.enter=\"PostApi()\">\n      <button type=\"button\" class=\"btn btn-primary rounded m-2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n          <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n        </svg>\n      </button>\n    </div>\n    <table class=\"container\">\n      <tr class=\"container d-inline-flex m-3\">\n        <td>ID</td>\n        <td>NAME</td>\n        <td>Description</td>\n        <td>Edit</td>\n        <td>Delete</td>\n      </tr>\n      <tr class=\"container d-inline-flex m-3\" v-for=\"todo of todos\" v-bind:key=\"todo.id\">\n        <td>{{ todo.id }}</td>\n        <td><input class=\"rounded form-control\" type=\"text\" v-model=\"todo.name\" />{{ todo.name }}</td>\n        <td><input class=\"rounded form-control\" type=\"text\" v-model=\"todo.description\" />{{ todo.description }}</td>\n        <td><button class=\"btn btn-outline-warning rounded m-2\" v-on:click=\"PutApi(todo.id, todo.name, todo.description)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n          </svg>\n        </button></td>\n        <td><button class=\"btn btn-outline-danger rounded\" v-on:click=\"DeleteApi(todo.id)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z\"/>\n            <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z\"/>\n          </svg>\n        </button></td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nconst baseUrl = 'http://localhost:3000/todos/'\n\nexport default {\n    name: 'App',\n    data() {\n        return {\n            todos: [],\n            nameis:'',\n            descriptionis:''\n        }\n    },\n    methods: {\n        async GetApi(){\n          await axios\n          .get(baseUrl)\n          .then((resp)=>{this.todos = resp.data;})\n          .catch((err)=>{console.log(err);});\n        },\n        async PostApi(){\n          await axios\n          .post(baseUrl, {name:this.nameis, description:this.descriptionis})\n          .then((resp)=>{console.log(resp);this.nameis='';this.descriptionis=''; this.GetApi();})\n          .catch((err)=>{console.log(err);});\n        },\n        async DeleteApi(id){\n          await axios\n          .delete(baseUrl + id)\n          .then((resp)=>{console.log(resp);this.GetApi();})\n          .catch((err)=>{console.log(err);});\n        },\n        async PutApi(id, name, description){\n          await axios\n          .put(baseUrl+id, {name:name, description:description})\n          .then((resp)=>{console.log(resp); this.GetApi();})\n          .catch((err)=>{console.log(err);});\n        }\n    },\n    mounted(){\n      this.GetApi();\n    }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AA0CA,OAAOA,KAAI,MAAO,OAAM;AACxB,MAAMC,OAAM,GAAI,8BAA6B;AAE7C,eAAe;EACXC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAC,EAAE;MACTC,aAAa,EAAC;IAClB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,MAAMA,CAAA,EAAE;MACZ,MAAMR,KAAI,CACTS,GAAG,CAACR,OAAO,EACXS,IAAI,CAAEC,IAAI,IAAG;QAAC,IAAI,CAACP,KAAI,GAAIO,IAAI,CAACR,IAAI;MAAC,CAAC,EACtCS,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMG,OAAOA,CAAA,EAAE;MACb,MAAMhB,KAAI,CACTiB,IAAI,CAAChB,OAAO,EAAE;QAACC,IAAI,EAAC,IAAI,CAACG,MAAM;QAAEa,WAAW,EAAC,IAAI,CAACZ;MAAa,CAAC,EAChEI,IAAI,CAAEC,IAAI,IAAG;QAACG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAAC,IAAI,CAACN,MAAM,GAAC,EAAE;QAAC,IAAI,CAACC,aAAa,GAAC,EAAE;QAAE,IAAI,CAACE,MAAM,CAAC,CAAC;MAAC,CAAC,EACrFI,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMM,SAASA,CAACC,EAAE,EAAC;MACjB,MAAMpB,KAAI,CACTqB,MAAM,CAACpB,OAAM,GAAImB,EAAE,EACnBV,IAAI,CAAEC,IAAI,IAAG;QAACG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAAC,IAAI,CAACH,MAAM,CAAC,CAAC;MAAC,CAAC,EAC/CI,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMS,MAAMA,CAACF,EAAE,EAAElB,IAAI,EAAEgB,WAAW,EAAC;MACjC,MAAMlB,KAAI,CACTuB,GAAG,CAACtB,OAAO,GAACmB,EAAE,EAAE;QAAClB,IAAI,EAACA,IAAI;QAAEgB,WAAW,EAACA;MAAW,CAAC,EACpDR,IAAI,CAAEC,IAAI,IAAG;QAACG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAAE,IAAI,CAACH,MAAM,CAAC,CAAC;MAAC,CAAC,EAChDI,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC;EACJ,CAAC;EACDW,OAAOA,CAAA,EAAE;IACP,IAAI,CAAChB,MAAM,CAAC,CAAC;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}