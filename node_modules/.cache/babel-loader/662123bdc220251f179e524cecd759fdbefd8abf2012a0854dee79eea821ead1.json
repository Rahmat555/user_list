{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3000/todos/';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      todos: [],\n      nameis: ''\n    };\n  },\n  methods: {\n    async GetApi() {\n      await axios.get(baseUrl).then(resp => {\n        this.todos = resp.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async PostApi() {\n      await axios.post(baseUrl, {\n        name: this.nameis\n      }).then(resp => {\n        console.log(resp);\n        this.nameis = '';\n        this.GetApi();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async DeleteApi(id) {\n      await axios.delete(baseUrl + id).then(resp => {\n        console.log(resp);\n        this.GetApi();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async PutApi(id, name) {\n      await axios.put(baseUrl + id, {\n        name: name\n      }).then(resp => {\n        console.log(resp);\n        this.GetApi();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  mounted() {\n    this.GetApi();\n  }\n};","map":{"version":3,"names":["axios","baseUrl","name","data","todos","nameis","methods","GetApi","get","then","resp","catch","err","console","log","PostApi","post","DeleteApi","id","delete","PutApi","put","mounted"],"sources":["C:\\Users\\rahma\\OneDrive\\Рабочий стол\\user_list\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container mt-2\">\n    <h1>User List</h1>\n    <input type=\"text\" class=\"form-control\" v-model=\"nameis\" v-on:keyup.enter=\"PostApi()\">\n    <button class=\"btn btn-primary rounded\"><i class=\"bi bi-search\"></i></button>\n    <table>\n      <tr>\n        <td>ID</td>\n        <td>NAME</td>\n        <td>Edit</td>\n        <td>Delete</td>\n      </tr>\n      <tr v-for=\"todo of todos\" v-bind:key=\"todo.id\">\n        <td>{{ todo.id }}</td>\n        <td><input type=\"text\" v-model=\"todo.name\" />{{ todo.name }}</td>\n        <td><button v-on:click=\"PutApi(todo.id, todo.name)\"><i class=\"bi bi-pencil-square\"></i></button></td>\n        <td><button class=\"btn btn-danger\" v-on:click=\"DeleteApi(todo.id)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z\"/>\n            <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z\"/>\n          </svg>\n        </button></td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nconst baseUrl = 'http://localhost:3000/todos/'\n\nexport default {\n    name: 'App',\n    data() {\n        return {\n            todos: [],\n            nameis:''\n        }\n    },\n    methods: {\n        async GetApi(){\n          await axios\n          .get(baseUrl)\n          .then((resp)=>{this.todos = resp.data;})\n          .catch((err)=>{console.log(err);});\n        },\n        async PostApi(){\n          await axios\n          .post(baseUrl, {name:this.nameis})\n          .then((resp)=>{console.log(resp);this.nameis=''; this.GetApi();})\n          .catch((err)=>{console.log(err);});\n        },\n        async DeleteApi(id){\n          await axios\n          .delete(baseUrl + id)\n          .then((resp)=>{console.log(resp);this.GetApi();})\n          .catch((err)=>{console.log(err);});\n        },\n        async PutApi(id, name){\n          await axios\n          .put(baseUrl+id, {name:name})\n          .then((resp)=>{console.log(resp); this.GetApi();})\n          .catch((err)=>{console.log(err);});\n        }\n    },\n    mounted(){\n      this.GetApi();\n    }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AA4BA,OAAOA,KAAI,MAAO,OAAM;AACxB,MAAMC,OAAM,GAAI,8BAA6B;AAE7C,eAAe;EACXC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAC;IACX;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,MAAMA,CAAA,EAAE;MACZ,MAAMP,KAAI,CACTQ,GAAG,CAACP,OAAO,EACXQ,IAAI,CAAEC,IAAI,IAAG;QAAC,IAAI,CAACN,KAAI,GAAIM,IAAI,CAACP,IAAI;MAAC,CAAC,EACtCQ,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMG,OAAOA,CAAA,EAAE;MACb,MAAMf,KAAI,CACTgB,IAAI,CAACf,OAAO,EAAE;QAACC,IAAI,EAAC,IAAI,CAACG;MAAM,CAAC,EAChCI,IAAI,CAAEC,IAAI,IAAG;QAACG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAAC,IAAI,CAACL,MAAM,GAAC,EAAE;QAAE,IAAI,CAACE,MAAM,CAAC,CAAC;MAAC,CAAC,EAC/DI,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMK,SAASA,CAACC,EAAE,EAAC;MACjB,MAAMlB,KAAI,CACTmB,MAAM,CAAClB,OAAM,GAAIiB,EAAE,EACnBT,IAAI,CAAEC,IAAI,IAAG;QAACG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAAC,IAAI,CAACH,MAAM,CAAC,CAAC;MAAC,CAAC,EAC/CI,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMQ,MAAMA,CAACF,EAAE,EAAEhB,IAAI,EAAC;MACpB,MAAMF,KAAI,CACTqB,GAAG,CAACpB,OAAO,GAACiB,EAAE,EAAE;QAAChB,IAAI,EAACA;MAAI,CAAC,EAC3BO,IAAI,CAAEC,IAAI,IAAG;QAACG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAAE,IAAI,CAACH,MAAM,CAAC,CAAC;MAAC,CAAC,EAChDI,KAAK,CAAEC,GAAG,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;IACpC;EACJ,CAAC;EACDU,OAAOA,CAAA,EAAE;IACP,IAAI,CAACf,MAAM,CAAC,CAAC;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}